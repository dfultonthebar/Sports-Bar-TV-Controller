generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model AudioInputMeter {
  id             String         @id
  processorId    String
  inputNumber    Int
  inputName      String
  level          Float          @default(0)
  peak           Float          @default(0)
  clipping       Boolean        @default(false)
  timestamp      DateTime       @default(now())
  AudioProcessor AudioProcessor @relation(fields: [processorId], references: [id], onDelete: Cascade)

  @@unique([processorId, inputNumber])
  @@index([processorId, timestamp])
}

model AudioMessage {
  id             String         @id
  processorId    String
  name           String
  audioFile      String
  duration       Int?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime
  AudioProcessor AudioProcessor @relation(fields: [processorId], references: [id], onDelete: Cascade)
}

model AudioProcessor {
  id              String            @id
  name            String
  model           String
  ipAddress       String
  port            Int               @default(80)
  zones           Int               @default(4)
  description     String?
  status          String            @default("offline")
  lastSeen        DateTime?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime
  password        String?
  username        String?
  AudioInputMeter AudioInputMeter[]
  AudioMessage    AudioMessage[]
  AudioScene      AudioScene[]
  AudioZone       AudioZone[]

  @@unique([ipAddress, port])
}

model AudioScene {
  id             String         @id
  processorId    String
  name           String
  description    String?
  sceneData      String
  createdAt      DateTime       @default(now())
  updatedAt      DateTime
  AudioProcessor AudioProcessor @relation(fields: [processorId], references: [id], onDelete: Cascade)
}

model AudioZone {
  id             String         @id
  processorId    String
  zoneNumber     Int
  name           String
  description    String?
  currentSource  String?
  volume         Int            @default(50)
  muted          Boolean        @default(false)
  enabled        Boolean        @default(true)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime
  AudioProcessor AudioProcessor @relation(fields: [processorId], references: [id], onDelete: Cascade)

  @@unique([processorId, zoneNumber])
}

model BartenderRemote {
  id          String    @id
  name        String
  ipAddress   String    @unique
  port        Int       @default(80)
  description String?
  status      String    @default("offline")
  lastSeen    DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
}

model DeviceMapping {
  id             String   @id
  tvNumber       Int      @unique
  fireTvDeviceId String?
  fireTvName     String?
  audioZoneId    String?
  audioZoneName  String?
  description    String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime
}

model FireTVDevice {
  id         String     @id
  name       String
  ipAddress  String     @unique
  macAddress String?
  location   String?
  status     String     @default("offline")
  lastSeen   DateTime?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime
  Schedule   Schedule[]
}

model HomeTeam {
  id             String   @id
  name           String   @unique
  sport          String
  league         String?
  logoUrl        String?
  primaryColor   String?
  secondaryColor String?
  enabled        Boolean  @default(true)
  priority       Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime
}

model MatrixConfig {
  id          String   @id
  name        String
  description String?
  config      String
  isActive    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model MatrixConfiguration {
  id              String         @id
  name            String
  ipAddress       String
  tcpPort         Int            @default(23)
  udpPort         Int            @default(4000)
  protocol        String         @default("TCP")
  isActive        Boolean        @default(true)
  cecInputChannel Int?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime
  MatrixInput     MatrixInput[]
  MatrixOutput    MatrixOutput[]
}

model MatrixInput {
  id                  String              @id
  configId            String
  channelNumber       Int
  label               String
  inputType           String              @default("HDMI")
  deviceType          String              @default("Other")
  isActive            Boolean             @default(true)
  status              String              @default("active")
  powerOn             Boolean             @default(false)
  isCecPort           Boolean             @default(false)
  createdAt           DateTime            @default(now())
  updatedAt           DateTime
  MatrixConfiguration MatrixConfiguration @relation(fields: [configId], references: [id], onDelete: Cascade)

  @@unique([configId, channelNumber])
}

model MatrixOutput {
  id                  String              @id
  configId            String
  channelNumber       Int
  label               String
  resolution          String              @default("1080p")
  isActive            Boolean             @default(true)
  status              String              @default("active")
  audioOutput         String?
  powerOn             Boolean             @default(false)
  createdAt           DateTime            @default(now())
  updatedAt           DateTime
  dailyTurnOn         Boolean             @default(true)
  dailyTurnOff        Boolean             @default(true)
  isMatrixOutput      Boolean             @default(true)
  MatrixConfiguration MatrixConfiguration @relation(fields: [configId], references: [id], onDelete: Cascade)

  @@unique([configId, channelNumber])
}

model Schedule {
  id            String        @id
  name          String
  deviceId      String
  channelName   String
  channelNumber String?
  startTime     DateTime
  endTime       DateTime?
  recurring     Boolean       @default(false)
  daysOfWeek    String?
  enabled       Boolean       @default(true)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime
  FireTVDevice  FireTVDevice  @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  ScheduleLog   ScheduleLog[]
}

model ScheduleLog {
  id          String   @id
  scheduleId  String
  executedAt  DateTime @default(now())
  success     Boolean
  error       String?
  channelName String
  deviceName  String
  Schedule    Schedule @relation(fields: [scheduleId], references: [id], onDelete: Cascade)
}

model SystemSettings {
  id          String   @id
  key         String   @unique
  value       String
  description String?
  updatedAt   DateTime
}

model TVLayout {
  id          String   @id
  name        String
  description String?
  layoutData  String
  isActive    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model TestLog {
  // Fixed: Added autoincrement for id field
  id            Int      @id @default(autoincrement())
  testType      String
  testName      String
  status        String
  inputChannel  Int?
  outputChannel Int?
  command       String?
  response      String?
  errorMessage  String?
  duration      Int?
  timestamp     DateTime @default(now())
  metadata      String?

  @@index([timestamp])
  @@index([status])
  @@index([testType])
}

model WolfpackMatrixRouting {
  id                  String    @id
  matrixOutputNumber  Int       @unique
  wolfpackInputNumber Int
  wolfpackInputLabel  String
  atlasInputLabel     String?
  isActive            Boolean   @default(true)
  lastRouted          DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime
}

model WolfpackMatrixState {
  id                  String   @id
  matrixOutputNumber  Int
  wolfpackInputNumber Int
  wolfpackInputLabel  String
  channelInfo         String?
  routedAt            DateTime @default(now())

  @@index([routedAt])
  @@index([matrixOutputNumber])
}

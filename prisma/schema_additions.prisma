
// Add these models to the end of prisma/schema.prisma

// Sports Guide Configuration Models
model SportsGuideConfiguration {
  id              String   @id @default(cuid())
  zipCode         String?
  city            String?
  state           String?
  timezone        String   @default("America/New_York")
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model TVProvider {
  id              String          @id @default(cuid())
  name            String
  type            String          // "cable", "satellite", "streaming", "iptv"
  channels        String          // JSON array of channel numbers
  packages        String          // JSON array of package names
  isActive        Boolean         @default(true)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  
  providerInputs  ProviderInput[]
}

model ProviderInput {
  id              String      @id @default(cuid())
  providerId      String
  inputId         String
  createdAt       DateTime    @default(now())
  
  provider        TVProvider  @relation(fields: [providerId], references: [id], onDelete: Cascade)
  
  @@unique([providerId, inputId])
}

// Update HomeTeam model - add these fields
// teamName, league, category, sport, location, conference, isPrimary, isActive

// TODO Management System Models
model Todo {
  id              String        @id @default(cuid())
  title           String
  description     String?
  priority        String        @default("MEDIUM") // "LOW", "MEDIUM", "HIGH", "CRITICAL"
  status          String        @default("PLANNED") // "PLANNED", "IN_PROGRESS", "TESTING", "COMPLETE"
  category        String?
  tags            String?       // JSON array of tags
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  completedAt     DateTime?
  
  documents       TodoDocument[]
}

model TodoDocument {
  id              String   @id @default(cuid())
  todoId          String
  filename        String
  filepath        String
  filesize        Int?
  mimetype        String?
  uploadedAt      DateTime @default(now())
  
  todo            Todo     @relation(fields: [todoId], references: [id], onDelete: Cascade)
  
  @@index([todoId])
}

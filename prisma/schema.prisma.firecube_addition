
// Add these models to the existing prisma/schema.prisma file
// Insert after the DirecTV models (around line 700)

model FireCubeDevice {
  id                  String    @id @default(cuid())
  name                String
  ipAddress           String    @unique
  port                Int       @default(5555)
  macAddress          String?
  serialNumber        String?   @unique
  deviceModel         String?
  softwareVersion     String?
  location            String?
  matrixInputChannel  Int?
  adbEnabled          Boolean   @default(false)
  status              String    @default("discovered") // discovered, online, offline, error
  lastSeen            DateTime?
  keepAwakeEnabled    Boolean   @default(false)
  keepAwakeStart      String    @default("07:00")
  keepAwakeEnd        String    @default("01:00")
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  
  apps                FireCubeApp[]
  sportsContent       FireCubeSportsContent[]
  keepAwakeLogs       FireCubeKeepAwakeLog[]
  sideloadOperations  FireCubeSideloadOperation[]
  
  @@index([status])
  @@index([keepAwakeEnabled])
}

model FireCubeApp {
  id                  String    @id @default(cuid())
  deviceId            String
  packageName         String
  appName             String
  version             String?
  versionCode         Int?
  category            String?
  iconUrl             String?
  isSystemApp         Boolean   @default(false)
  isSportsApp         Boolean   @default(false)
  hasSubscription     Boolean   @default(false)
  subscriptionStatus  String?
  lastChecked         DateTime?
  installedAt         DateTime?
  updatedAt           DateTime  @updatedAt
  
  device              FireCubeDevice @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  sportsContent       FireCubeSportsContent[]
  
  @@unique([deviceId, packageName])
  @@index([deviceId])
  @@index([isSportsApp])
  @@index([hasSubscription])
}

model FireCubeSportsContent {
  id                  String    @id @default(cuid())
  appId               String
  deviceId            String
  contentTitle        String
  contentType         String
  league              String?
  teams               String?
  startTime           DateTime?
  endTime             DateTime?
  channel             String?
  isLive              Boolean   @default(false)
  deepLink            String?
  thumbnailUrl        String?
  description         String?
  lastUpdated         DateTime  @default(now())
  
  app                 FireCubeApp @relation(fields: [appId], references: [id], onDelete: Cascade)
  device              FireCubeDevice @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  
  @@index([deviceId])
  @@index([isLive])
  @@index([startTime])
}

model FireCubeKeepAwakeLog {
  id                  String    @id @default(cuid())
  deviceId            String
  action              String
  success             Boolean
  errorMessage        String?
  timestamp           DateTime  @default(now())
  
  device              FireCubeDevice @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  
  @@index([deviceId])
  @@index([timestamp])
}

model FireCubeSideloadOperation {
  id                  String    @id @default(cuid())
  sourceDeviceId      String
  targetDeviceIds     String
  packageName         String
  appName             String
  status              String    @default("pending") // pending, in_progress, completed, failed, partial
  progress            Int       @default(0)
  totalDevices        Int
  completedDevices    Int       @default(0)
  failedDevices       Int       @default(0)
  errorLog            String?
  startedAt           DateTime  @default(now())
  completedAt         DateTime?
  
  sourceDevice        FireCubeDevice @relation(fields: [sourceDeviceId], references: [id], onDelete: Cascade)
  
  @@index([status])
  @@index([startedAt])
}

model FireCubeDiscoveryLog {
  id                  String    @id @default(cuid())
  discoveryMethod     String
  devicesFound        Int       @default(0)
  duration            Int?
  ipRange             String?
  status              String
  errorMessage        String?
  details             String?
  timestamp           DateTime  @default(now())
  
  @@index([timestamp])
  @@index([status])
}

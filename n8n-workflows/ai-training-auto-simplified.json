{
  "name": "AI Training - Auto Documentation Monitor",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 15
            }
          ]
        }
      },
      "id": "schedule",
      "name": "Check Every 15 Minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        250,
        300
      ]
    },
    {
      "parameters": {
        "command": "find /home/ubuntu/Sports-Bar-TV-Controller/docs -name '*.md' -type f -mmin -20 | head -20"
      },
      "id": "find-modified",
      "name": "Find Recently Modified Docs",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        470,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.stdout}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "check-results",
      "name": "Any Files Changed?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        690,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "const files = $input.first().json.stdout.split('\\n').filter(f => f.trim());\nconst results = [];\n\nfor (const file of files) {\n  if (file) {\n    results.push({\n      filePath: file,\n      fileName: file.split('/').pop(),\n      detectedAt: new Date().toISOString()\n    });\n  }\n}\n\nreturn results.map(r => ({ json: r }));"
      },
      "id": "process-files",
      "name": "Process File List",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        910,
        300
      ]
    },
    {
      "parameters": {
        "url": "http://localhost:3001/api/ai/qa-generate",
        "method": "POST",
        "sendBody": true,
        "contentType": "json",
        "specifyBody": "json",
        "jsonBody": "={\n  \"paths\": [\"{{ $json.filePath }}\"],\n  \"sourceType\": \"documentation\"\n}",
        "options": {}
      },
      "id": "call-api",
      "name": "Queue for Q&A Generation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1130,
        300
      ]
    },
    {
      "parameters": {
        "command": "echo 'ðŸ“š Documentation updated: {{ $json.fileName }} queued for AI training' >> /home/ubuntu/Sports-Bar-TV-Controller/logs/n8n-training.log"
      },
      "id": "log-activity",
      "name": "Log Activity",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1350,
        300
      ]
    }
  ],
  "connections": {
    "Check Every 15 Minutes": {
      "main": [
        [
          {
            "node": "Find Recently Modified Docs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Recently Modified Docs": {
      "main": [
        [
          {
            "node": "Any Files Changed?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Any Files Changed?": {
      "main": [
        [
          {
            "node": "Process File List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process File List": {
      "main": [
        [
          {
            "node": "Queue for Q&A Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Queue for Q&A Generation": {
      "main": [
        [
          {
            "node": "Log Activity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-10-29T21:30:00.000Z",
  "versionId": "2"
}
